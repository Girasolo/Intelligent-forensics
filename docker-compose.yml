version: '3'
services:
  #to add a new router copy and paste this configuration. Define its ip address and assign a network consistenlty with the architecture required
  router1:
    build: 
      context: ./router
      dockerfile: Dockerfile_router
    #set the network and system priviledges high to make it possible to add static route and set the flag for forwarding to 1. Done for all the containers in this primal phase.
    cap_add:
      - NET_ADMIN
    privileged: true
    #put the container in a loop in order to access it with bash
    command: 
      - "/bin/sleep"
      - "infinity"
    networks:
      clientSide:
        ipv4_address: 172.16.1.2
      internalNet:
        ipv4_address: 172.16.2.2

  router2:
    build: 
      context: ./router
      dockerfile: Dockerfile_router
    #set the network and system priviledges high to make it possible to add static route and set the flag for forwarding to 1. Done for all the containers in this primal phase.
    cap_add:
      - NET_ADMIN
    privileged: true
    #put the container in a loop in order to access it with bash
    command: 
      - "/bin/sleep"
      - "infinity"
    networks:
      internalNet:
        ipv4_address: 172.16.2.3
      serverSide:
        ipv4_address: 172.16.0.2

  client:
    build: 
      context: ./client
      dockerfile: Dockerfile_client
    #privedges for network needed to add a new ip route
    cap_add:
      - NET_ADMIN
    #put the container in a loop in order to access it with bash
    command: 
      - "/bin/sleep"
      - "infinity"  
    networks:
      clientSide:
        ipv4_address: 172.16.1.10

  temp:
    build: 
      context: ./temp
      dockerfile: Dockerfile_temp
    cap_add:
      - NET_ADMIN
    #privileged: true
    #put the container in a loop in order to access it with bash
    command: 
      - "/bin/sleep"
      - "infinity"  
    networks:
      serverSide:
        ipv4_address: 172.16.0.11

  server_:
    image: ubuntu:22.04
    #put the container in a loop in order to access it with bash
    command:
      #- "ip route add 172.16.1.0/24 via 172.16.0.2" 
      - "/bin/sleep"
      - "infinity"
    cap_add:
      - NET_ADMIN
    #privileged: true
    networks:
      serverSide:
        ipv4_address: 172.16.0.10

networks:
  clientSide:
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.1.0/24
  serverSide:
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.0.0/24
  internalNet:
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.2.0/24
